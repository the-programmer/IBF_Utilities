<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.10">
  <POU Name="FB_ParameterHandler" Id="{05138ead-89ff-49ee-b483-c922423e053d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK PUBLIC FB_ParameterHandler
VAR_OUTPUT
	arParameters		: ARRAY [1..GVL_Parameters.MAX_PARAMETERS] OF Udt_ParameterId := [stDummyParId]; 
END_VAR
VAR
	nLookupIndex		: UDINT := 1;
	nNumberOfParameters : UDINT := 1;
	// parameter change commands
	bCmdLoadfactory		: BOOL 	:= FALSE; // Load factory value into prepared value 
	bCmdLoadFromPrevious: BOOL 	:= FALSE; // Load from saved previous value into prepared value
	bCmdTeach			: BOOL 	:= FALSE; // Start teaching function for selected parameter
	bCmdAcceptTeach		: BOOL 	:= FALSE ; // Accept the teach value
	// Dummy parameter when no parameters are added yet
	stDummyParId		: Udt_ParameterId ;
	// Memory 
	fValueOld			: LREAL	:= 0 ; // previous value
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// call parameter change function 
ExecChangeParValues();]]></ST>
    </Implementation>
    <Method Name="CmdAddParameter" Id="{583b0722-1ffd-474a-842a-92108166fa41}">
      <Declaration><![CDATA[METHOD PUBLIC CmdAddParameter : BOOL
VAR_IN_OUT
	refParameter : Udt_Parameter ; // Parameter to add
END_VAR
VAR
	i 			: UDINT ;
	j			: UDINT ;
	stTempPar	: Udt_ParameterId ;
	bParFound	: BOOL 	:= FALSE ;
END_VAR]]></Declaration>
      <Implementation>
        <ST><![CDATA[// Get number of parameters
FOR i := 1 TO GVL_Parameters.MAX_PARAMETERS DO
	IF arParameters[i].pParameter = 0 THEN
		nNumberOfParameters := i - 1;
		EXIT ;
	END_IF
END_FOR

// check if parameter is already added
FOR i := 1 TO nNumberOfParameters DO
	IF arParameters[i].nNumber = refParameter.nNumber THEN
		CmdAddParameter := TRUE;
 		RETURN ;
	END_IF
END_FOR
	
// Add parameter to array
nNumberOfParameters := nNumberOfParameters + 1; 
IF nNumberOfParameters <= GVL_Parameters.MAX_PARAMETERS THEN
	arParameters[nNumberOfParameters].nNumber		:= refParameter.nNumber 	;
	arParameters[nNumberOfParameters].sName			:= refParameter.sName	;
	arParameters[nNumberOfParameters].sType			:= refParameter.sType	;
	arParameters[nNumberOfParameters].pParameter 	:= ADR(refParameter)	;
	
	// (re)sort parameter list
	FOR i := 2 TO nNumberOfParameters BY 1 DO
		FOR j := 1 TO nNumberOfParameters -1 BY 1 DO
			IF (arParameters[j].nNumber > arParameters[j+1].nNumber)THEN
				stTempPar 			:= arParameters[j+1];
				arParameters[j+1]	:= arParameters[j];
				arParameters[j]		:= stTempPar ;
			END_IF
		END_FOR
	END_FOR	
	
	// set feedback
	CmdAddParameter S= arParameters[nNumberOfParameters].pParameter > 0 ;
ELSE
	CmdAddParameter := FALSE;	
END_IF

]]></ST>
      </Implementation>
    </Method>
    <Method Name="ExecChangeParValues" Id="{c7b35048-067c-42e5-b2e3-c5adbe6ea0da}">
      <Declaration><![CDATA[METHOD ExecChangeParValues : BOOL
VAR
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[IF arParameters[nLookupIndex].pParameter <> 0 THEN 
	;
ELSE
	RETURN; 
END_IF

// Load values from default or saved
IF bCmdLoadfactory THEN 
	arParameters[nLookupIndex].pParameter^.fValue := arParameters[nLookupIndex].pParameter^.fFactory ;
	bCmdLoadfactory := FALSE ;
ELSIF bCmdLoadFromPrevious THEN
	arParameters[nLookupIndex].pParameter^.fValue := arParameters[nLookupIndex].pParameter^.fSaved ;
	bCmdLoadFromPrevious := FALSE ;
ELSIF bCmdAcceptTeach THEN 
	arParameters[nLookupIndex].pParameter^.fValue := arParameters[nLookupIndex].pParameter^.fPrepared ;
	bCmdAcceptTeach := FALSE ;
END_IF
]]></ST>
      </Implementation>
    </Method>
  </POU>
</TcPlcObject>